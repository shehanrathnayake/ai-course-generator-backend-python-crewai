curriculum_design_task:
  description: >
    Analyze the topic "{topic}" and the user's desired complexity level: {complexity_level}.
    Create a detailed course outline with logical module and section breakdowns. 
    Make sure to cover core concepts and progression appropriate for the selected level of depth.
  expected_output: >
    A course outline consisting of:
    - 4 to 8 sections (modules)
    - Each section with a short title and 1-2 sentence description
    Format the output as a bullet list using markdown.
  agent: curriculum_designer

content_creation_task:
  description: >
    Based on the generated course outline for the topic "{topic}", write in-depth course content for each section.
    Include explanations, examples, and real-world context where applicable. Use educational tone suitable for {complexity_level} learners.
    Output the result as a valid JSON object with a 'modules' array. Each module should have:
    - 'title': module title,
    - 'description': short description,
    - 'content': markdown-formatted content as a string (4–6 paragraphs),
    - 'quiz': an empty array (to be filled in later by quiz generation).
  expected_output: >
    {
      "modules": [
        {
          "title": "Module Title",
          "description": "Brief summary of the module",
          "content": "## Heading\\nYour markdown content here...",
          "quiz": []
        }
      ]
    }
  agent: content_creator

quiz_generation_task:
  description: >
    Based on the existing course modules, populate each module’s 'quiz' field with 2 to 4 questions.
    Each question should include:
    - 'question': the quiz prompt
    - 'choices': 2 to 4 answer choices (if applicable),
    - 'answer': the correct answer,
    - 'explanation': a short explanation of the answer.
    Use varied question types: MCQs, true/false, and short answers.
    Output the updated JSON object with quizzes filled in.
  expected_output: >
    {
      "modules": [
        {
          "title": "...",
          "description": "...",
          "content": "...",
          "quiz": [
            {
              "question": "...",
              "choices": ["a", "b", "c"],
              "answer": "a",
              "explanation": "..."
            }
          ]
        }
      ]
    }
  agent: quiz_master

content_editing_task:
  description: >
    Review and refine the drafted {topic} course content.
    Improve flow, grammar, tone, and clarity while preserving the meaning.
    Ensure consistent formatting, terminology, and readability appropriate for {complexity_level}.
  expected_output: >
    A polished version of the full course content in markdown format, cleaned for clarity and readability.
  agent: content_editor

formatting_task:
  description: >
    Format the finalized course content on "{topic}" into a clean, structured JSON object.
    nsure all fields are consistently labeled and the output is suitable for use in frontend rendering,
    APIs, or storage for later export (e.g., to EPUB or PDF).
  expected_output: >
    A single JSON object representing the full course, with nested structure for sections, lessons, and quizzes.
    Ensure the data is clean, semantically meaningful, and easy to parse.
  output_format_hint: >
    {
      "title": "Course Title",
      "description": "Short summary of the course",
      "sections": [
        {
          "title": "Section Title",
          "lessons": [
            {
              "title": "Lesson Title",
              "content": "Detailed lesson content"
            }
          ],
          "quiz": {
            "questions": [
              {
                "question": "What is ...?",
                "options": ["A", "B", "C", "D"],
                "answer": "A"
              }
            ]
          }
        }
      ]
    }
  agent: format_agent

# feedback_loop_task:
#   description: >
#     Gather feedback from the user regarding the {topic} course outline and content.
#     Identify which parts need changes or improvement and coordinate with the appropriate agents to update the material.
#   expected_output: >
#     A list of user-requested changes and a plan for revising the course content accordingly.
#     Optionally, regenerate relevant sections or quizzes based on feedback.
#   agent: feedback_agent


# research_task:
#   description: >
#     Conduct a thorough research about {topic}
#     Make sure you find any interesting and relevant information given
#     the current year is {current_year}.
#   expected_output: >
#     A list with 10 bullet points of the most relevant information about {topic}
#   agent: researcher

# reporting_task:
#   description: >
#     Review the context you got and expand each topic into a full section for a report.
#     Make sure the report is detailed and contains any and all relevant information.
#   expected_output: >
#     A fully fledged report with the main topics, each with a full section of information.
#     Formatted as markdown without '```'
#   agent: reporting_analyst
